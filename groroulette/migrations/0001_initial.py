# Generated by Django 5.2.5 on 2025-08-21 14:07

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('marketplace', '0003_alter_favorite_product_alter_favorite_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('smart_shopper', 'Smart Shopper'), ('budget_master', 'Budget Master'), ('variety_explorer', 'Variety Explorer'), ('loyal_customer', 'Loyal Customer')], max_length=50, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.ImageField(blank=True, upload_to='badges/')),
                ('points', models.IntegerField(default=10)),
            ],
            options={
                'db_table': 'badges',
            },
        ),
        migrations.CreateModel(
            name='Spin',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='NGN', max_length=3)),
                ('total_items_generated', models.IntegerField(default=0)),
                ('total_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max_items_to_select', models.PositiveIntegerField(default=5)),
                ('preferences_snapshot', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('generated', 'Generated'), ('selecting', 'Selecting'), ('completed', 'Completed'), ('abandoned', 'Abandoned')], default='generated', max_length=20)),
                ('selection_started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spins', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'spins',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SpinItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(default=1)),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('position_in_spin', models.IntegerField()),
                ('is_selected', models.BooleanField(default=False)),
                ('selected_at', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.product')),
                ('spin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='groroulette.spin')),
            ],
            options={
                'db_table': 'spin_items',
                'ordering': ['position_in_spin'],
            },
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('checked_out', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='baskets', to=settings.AUTH_USER_MODEL)),
                ('spin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basket', to='groroulette.spin')),
                ('items', models.ManyToManyField(to='groroulette.spinitem')),
            ],
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dietary_restrictions', models.JSONField(default=list)),
                ('allergies', models.JSONField(default=list)),
                ('preferred_categories', models.JSONField(default=list)),
                ('excluded_brands', models.JSONField(default=list)),
                ('max_budget_default', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_preferences',
            },
        ),
        migrations.AddField(
            model_name='spin',
            name='preferences',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='groroulette.userpreference'),
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groroulette.badge')),
                ('spin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='groroulette.spin')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_badges',
                'unique_together': {('user', 'badge', 'spin')},
            },
        ),
    ]
